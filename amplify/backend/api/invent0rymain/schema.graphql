type Categories @model @auth(rules: [{allow: public}, {allow: owner}, {allow: private}]) {
  id: ID!
  name: String
  Items: Items @belongsTo
}

type Locations @model @auth(rules: [{allow: owner, ownerField: "owner", operations: [create, update, delete, read]}]) {
  id: ID!
  name: String
  street: String
  town: String
  zip: Int
  owner: String
  Items: [Items] @hasMany(indexName: "byLocations", fields: ["id"])
}

type Items @model @auth(rules: [{allow: owner, ownerField: "owner", operations: [create, update, delete, read]}]) {
  id: ID!
  name: String
  itemCount: Int
  picture: String
  sku: String
  expire: String
  price: Int
  owner: String
  locationsID: ID! @index(name: "byLocations")
  businessID: ID! @index(name: "byBusiness")
  Categories: Categories @hasOne
  isPerishable: Boolean
}

type Business @model @auth(rules: [{allow: owner, ownerField: "owner", operations: [create, update, delete, read]}]) {
  id: ID!
  name: String
  currency: String
  owner: String
  Locations: Locations @hasOne
  Items: [Items] @hasMany(indexName: "byBusiness", fields: ["id"])
}
 